<VirtualHost *:${PORT}>
    ServerAdmin webmaster@localhost
    DocumentRoot /app/public

    # Enable required modules
    LoadModule rewrite_module /usr/lib/apache2/modules/mod_rewrite.so
    LoadModule headers_module /usr/lib/apache2/modules/mod_headers.so
    LoadModule ssl_module /usr/lib/apache2/modules/mod_ssl.so
    LoadModule proxy_module /usr/lib/apache2/modules/mod_proxy.so
    LoadModule proxy_http_module /usr/lib/apache2/modules/mod_proxy_http.so

    # SSL Configuration
    SSLEngine on
    SSLCertificateFile /etc/ssl/certs/ssl-cert-snakeoil.pem
    SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key

    # Enable HTTP2
    Protocols h2 h2c http/1.1

    # Security Headers
    Header always set X-Frame-Options "SAMEORIGIN"
    Header always set X-XSS-Protection "1; mode=block"
    Header always set X-Content-Type-Options "nosniff"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
    Header always set Content-Security-Policy "default-src 'self' https://twod3d-lottery-api-q68w.onrender.com https://fonts.googleapis.com https://fonts.gstatic.com https://cdnjs.cloudflare.com; img-src 'self' data: https:; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdnjs.cloudflare.com; script-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com;"

    # CORS Configuration
    SetEnvIf Origin "^https://twod3d-lottery\.onrender\.com$" CORS_ORIGIN=$0
    Header set Access-Control-Allow-Origin "%{CORS_ORIGIN}e" env=CORS_ORIGIN
    Header set Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE"
    Header set Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization"
    Header set Access-Control-Allow-Credentials "true"

    # Enable .htaccess and handle Authorization
    <Directory /app/public>
        Options -Indexes +FollowSymLinks
        AllowOverride All
        Require all granted

        # Handle Authorization header
        SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1

        # Handle SPA routing
        RewriteEngine On
        RewriteBase /
        RewriteRule ^index\.html$ - [L]
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteRule . /index.html [L]

        # Handle OPTIONS preflight
        RewriteCond %{REQUEST_METHOD} OPTIONS
        RewriteRule ^(.*)$ $1 [R=200,L]
    </Directory>

    # Cache Control
    <FilesMatch "\.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$">
        Header set Cache-Control "max-age=31536000, public"
    </FilesMatch>

    # No cache for dynamic pages
    <LocationMatch "^/$|^/login\.html$">
        Header set Cache-Control "no-store, no-cache, must-revalidate"
    </LocationMatch>

    # API Proxy
    ProxyPreserveHost On
    ProxyPass /api/ https://twod3d-lottery-api-q68w.onrender.com/api/
    ProxyPassReverse /api/ https://twod3d-lottery-api-q68w.onrender.com/api/

    # Health check
    <Location /health>
        Header set Content-Type "text/plain"
        RewriteEngine On
        RewriteRule .* - [R=200]
    </Location>

    # Logging
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined

    # Compression
    AddOutputFilterByType DEFLATE text/plain text/html text/xml text/css application/xml application/xhtml+xml application/rss+xml application/javascript application/x-javascript
</VirtualHost> 